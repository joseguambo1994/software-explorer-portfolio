/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF, PerspectiveCamera } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

export function Model(props) {
  
  const { nodes, materials } = useGLTF("/Duck.glb");
  const mesh = useRef(null)

  useFrame((_, delta) => {
    if(mesh && mesh?.current){
      mesh.current.rotation.y += 1 * delta
    }
   
})

  
  return (
    <group {...props} dispose={null}>
      <group scale={1}>
        <PerspectiveCamera
          makeDefault={false}
          far={10000}
          near={1}
          fov={37.85}
          position={[400.11, 463.26, -431.08]}
          rotation={[-2.31, 0.57, 2.61]}
        />
        <mesh
          ref={mesh}
          castShadow
          receiveShadow
          geometry={nodes.LOD3spShape.geometry}
          material={materials["blinn3-fx"]}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/Duck.glb");
